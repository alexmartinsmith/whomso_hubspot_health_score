{"ast":null,"code":"var _jsxFileName = \"/Users/alexmartinsmith/Desktop/whomso_hubspot_health_score/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORY_OPTIONS = {\n  \"Customer Engagement (Last 30 days)\": [\"Emails Sent\", \"Meetings Held\", \"Login Activity\", \"Time in Product\", \"Feature Adoption\", \"Survey Responses\"],\n  \"Customer Sentiment\": [\"CSM Sentiment\", \"Customer Feedback\", \"Net Promoter Score (NPS)\"],\n  \"Support Interactions\": [\"Support Tickets Raised\", \"Satisfaction with Support\"],\n  \"Financial Metrics\": [\"Renewal Likelihood\", \"Contract Value Growth\", \"Outstanding Payments\"],\n  \"Account Maturity\": [\"Time as Customer\", \"Lifecycle Stage\", \"Implementation Progress\"],\n  \"Product Fit and Usage\": [\"Seats Utilized vs. Purchased\", \"Expansion Readiness\"],\n  \"Customer Advocacy\": [\"Referrals Given\", \"Case Studies or Testimonials\"],\n  \"Strategic Alignment\": [\"Strategic Goals Alignment\", \"Executive Sponsor Engagement\"],\n  \"Miscellaneous\": [\"Competitor Risk\", \"Social Media Mentions\", \"Training and Certification\"]\n};\nfunction App() {\n  _s();\n  const [inputs, setInputs] = useState([{\n    id: 1,\n    name: '',\n    weight: 20,\n    values: [{\n      id: 1,\n      name: '',\n      points: 0\n    }]\n  }]);\n\n  // Add new input group\n  const addInput = () => {\n    setInputs([...inputs, {\n      id: Date.now(),\n      name: '',\n      weight: 20,\n      values: [{\n        id: Date.now(),\n        name: '',\n        points: 0\n      }]\n    }]);\n  };\n\n  // Add new value to an input\n  const addValue = inputId => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: [...input.values, {\n            id: Date.now(),\n            name: '',\n            points: 0\n          }]\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Update input name\n  const updateInputName = (inputId, name) => {\n    setInputs(inputs.map(input => input.id === inputId ? {\n      ...input,\n      name\n    } : input));\n  };\n\n  // Update value name\n  const updateValueName = (inputId, valueId, name) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => value.id === valueId ? {\n            ...value,\n            name\n          } : value)\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust weight in 5% steps\n  const adjustWeight = (inputId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        const newWeight = Math.max(0, Math.min(100, input.weight + (increment ? 5 : -5)));\n        return {\n          ...input,\n          weight: newWeight\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust points\n  const adjustPoints = (inputId, valueId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => value.id === valueId ? {\n            ...value,\n            points: value.points + (increment ? 1 : -1)\n          } : value)\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeValue = (inputId, valueId) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        // Only remove if there's more than one value\n        if (input.values.length > 1) {\n          return {\n            ...input,\n            values: input.values.filter(value => value.id !== valueId)\n          };\n        }\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeInput = inputId => {\n    if (inputs.length > 1) {\n      setInputs(inputs.filter(input => input.id !== inputId));\n    }\n  };\n  const totalWeight = inputs.reduce((sum, input) => sum + input.weight, 0);\n\n  // Add this helper function to generate random colors for inputs\n  const getInputColor = index => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEEAD', '#D4A5A5', '#9B59B6', '#3498DB', '#E67E22', '#27AE60'];\n    return colors[index % colors.length];\n  };\n  const generateExampleCompany = (number, inputs) => {\n    const selectedValues = inputs.map(input => {\n      if (!input.name || input.values.length === 0) return null;\n\n      // For first company (lowest score), select value with lowest points\n      // For second company (highest score), select value with highest points\n      const value = number === 1 ? input.values.reduce((min, v) => v.points < min.points ? v : min, input.values[0]) : input.values.reduce((max, v) => v.points > max.points ? v : max, input.values[0]);\n      return {\n        category: input.name,\n        value: value.name,\n        points: value.points,\n        weight: input.weight\n      };\n    }).filter(Boolean);\n    const healthScore = selectedValues.reduce((score, item) => {\n      return score + item.points * (item.weight / 100);\n    }, 0);\n    return {\n      id: number,\n      name: number === 1 ? \"Lowest Score Example\" : \"Highest Score Example\",\n      values: selectedValues,\n      healthScore: Math.round(healthScore * 10) / 10\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Health Score Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your health score by adding inputs and values.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Weight Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-bars\",\n          children: inputs.map((input, index) => input.weight > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gauge-bar\",\n            style: {\n              width: `${input.weight}%`,\n              backgroundColor: getInputColor(index)\n            }\n          }, input.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-scale\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"0%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-legend\",\n          children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: getInputColor(index)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-label\",\n              children: [input.name || 'Unnamed Input', \" (\", input.weight, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, input.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), totalWeight > 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weight-warning\",\n          children: \"Total weight exceeds 100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"examples-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example Companies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"companies-container\",\n          children: [1, 2].map(num => {\n            const company = generateExampleCompany(num, inputs);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"company-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"company-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"company-logo\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    viewBox: \"0 0 24 24\",\n                    width: \"24\",\n                    height: \"24\",\n                    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                      width: \"24\",\n                      height: \"24\",\n                      fill: \"#e2e8f0\",\n                      rx: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                      x: \"50%\",\n                      y: \"50%\",\n                      fontSize: \"12\",\n                      fill: \"#718096\",\n                      textAnchor: \"middle\",\n                      dy: \".3em\",\n                      children: num\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"company-name\",\n                  children: company.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"health-score\",\n                  children: [\"Score: \", company.healthScore]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"company-values\",\n                children: company.values.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"value-pill\",\n                  title: `${value.category}: ${value.points > 0 ? '+' : ''}${value.points} pts (${value.weight}% weight)`,\n                  children: value.value\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, num, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: input.name,\n          onChange: e => updateInputName(input.id, e.target.value),\n          className: \"name-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), Object.entries(CATEGORY_OPTIONS).map(([groupName, options]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: groupName,\n            children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this))\n          }, groupName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weight-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => adjustWeight(input.id, false),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [input.weight, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => adjustWeight(input.id, true),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), inputs.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeInput(input.id),\n          className: \"remove-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"values-container\",\n        children: [input.values.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: value.name,\n            onChange: e => updateValueName(input.id, value.id, e.target.value),\n            placeholder: \"Score Name\",\n            className: \"name-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"points-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => adjustPoints(input.id, value.id, false),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [value.points > 0 ? '+' : '', value.points, \" pts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => adjustPoints(input.id, value.id, true),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this), input.values.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeValue(input.id, value.id),\n              className: \"remove-button\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)]\n        }, value.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addValue(input.id),\n          className: \"add-button\",\n          children: \"Add Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, input.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addInput,\n        className: \"add-button\",\n        children: \"Add Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4JUsR8ovNGs0IxBJM2kJ0sP4Ha4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CATEGORY_OPTIONS","App","_s","inputs","setInputs","id","name","weight","values","points","addInput","Date","now","addValue","inputId","map","input","updateInputName","updateValueName","valueId","value","adjustWeight","increment","newWeight","Math","max","min","adjustPoints","removeValue","length","filter","removeInput","totalWeight","reduce","sum","getInputColor","index","colors","generateExampleCompany","number","selectedValues","v","category","Boolean","healthScore","score","item","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","num","company","viewBox","height","fill","rx","x","y","fontSize","textAnchor","dy","title","onChange","e","target","Object","entries","groupName","options","label","option","onClick","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/alexmartinsmith/Desktop/whomso_hubspot_health_score/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CATEGORY_OPTIONS = {\n  \"Customer Engagement (Last 30 days)\": [\n    \"Emails Sent\",\n    \"Meetings Held\",\n    \"Login Activity\",\n    \"Time in Product\",\n    \"Feature Adoption\",\n    \"Survey Responses\"\n  ],\n  \"Customer Sentiment\": [\n    \"CSM Sentiment\",\n    \"Customer Feedback\",\n    \"Net Promoter Score (NPS)\"\n  ],\n  \"Support Interactions\": [\n    \"Support Tickets Raised\",\n    \"Satisfaction with Support\"\n  ],\n  \"Financial Metrics\": [\n    \"Renewal Likelihood\",\n    \"Contract Value Growth\",\n    \"Outstanding Payments\"\n  ],\n  \"Account Maturity\": [\n    \"Time as Customer\",\n    \"Lifecycle Stage\",\n    \"Implementation Progress\"\n  ],\n  \"Product Fit and Usage\": [\n    \"Seats Utilized vs. Purchased\",\n    \"Expansion Readiness\"\n  ],\n  \"Customer Advocacy\": [\n    \"Referrals Given\",\n    \"Case Studies or Testimonials\"\n  ],\n  \"Strategic Alignment\": [\n    \"Strategic Goals Alignment\",\n    \"Executive Sponsor Engagement\"\n  ],\n  \"Miscellaneous\": [\n    \"Competitor Risk\",\n    \"Social Media Mentions\",\n    \"Training and Certification\"\n  ]\n};\n\nfunction App() {\n  const [inputs, setInputs] = useState([\n    {\n      id: 1,\n      name: '',\n      weight: 20,\n      values: [{ id: 1, name: '', points: 0 }]\n    }\n  ]);\n\n  // Add new input group\n  const addInput = () => {\n    setInputs([...inputs, {\n      id: Date.now(),\n      name: '',\n      weight: 20,\n      values: [{ id: Date.now(), name: '', points: 0 }]\n    }]);\n  };\n\n  // Add new value to an input\n  const addValue = (inputId) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: [...input.values, { id: Date.now(), name: '', points: 0 }]\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Update input name\n  const updateInputName = (inputId, name) => {\n    setInputs(inputs.map(input => \n      input.id === inputId ? { ...input, name } : input\n    ));\n  };\n\n  // Update value name\n  const updateValueName = (inputId, valueId, name) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => \n            value.id === valueId ? { ...value, name } : value\n          )\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust weight in 5% steps\n  const adjustWeight = (inputId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        const newWeight = Math.max(0, Math.min(100, input.weight + (increment ? 5 : -5)));\n        return { ...input, weight: newWeight };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust points\n  const adjustPoints = (inputId, valueId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => \n            value.id === valueId \n              ? { ...value, points: value.points + (increment ? 1 : -1) }\n              : value\n          )\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeValue = (inputId, valueId) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        // Only remove if there's more than one value\n        if (input.values.length > 1) {\n          return {\n            ...input,\n            values: input.values.filter(value => value.id !== valueId)\n          };\n        }\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeInput = (inputId) => {\n    if (inputs.length > 1) {\n      setInputs(inputs.filter(input => input.id !== inputId));\n    }\n  };\n\n  const totalWeight = inputs.reduce((sum, input) => sum + input.weight, 0);\n\n  // Add this helper function to generate random colors for inputs\n  const getInputColor = (index) => {\n    const colors = [\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', \n      '#FFEEAD', '#D4A5A5', '#9B59B6', '#3498DB',\n      '#E67E22', '#27AE60'\n    ];\n    return colors[index % colors.length];\n  };\n\n  const generateExampleCompany = (number, inputs) => {\n    const selectedValues = inputs.map(input => {\n      if (!input.name || input.values.length === 0) return null;\n      \n      // For first company (lowest score), select value with lowest points\n      // For second company (highest score), select value with highest points\n      const value = number === 1 \n        ? input.values.reduce((min, v) => v.points < min.points ? v : min, input.values[0])\n        : input.values.reduce((max, v) => v.points > max.points ? v : max, input.values[0]);\n      \n      return {\n        category: input.name,\n        value: value.name,\n        points: value.points,\n        weight: input.weight\n      };\n    }).filter(Boolean);\n\n    const healthScore = selectedValues.reduce((score, item) => {\n      return score + (item.points * (item.weight / 100));\n    }, 0);\n\n    return {\n      id: number,\n      name: number === 1 ? \"Lowest Score Example\" : \"Highest Score Example\",\n      values: selectedValues,\n      healthScore: Math.round(healthScore * 10) / 10\n    };\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Health Score Builder</h1>\n      <h2>Build your health score by adding inputs and values.</h2>\n      \n      <div className=\"metrics-container\">\n        <div className=\"gauge-section\">\n          <h3>Weight Distribution</h3>\n          <div className=\"gauge-bars\">\n            {inputs.map((input, index) => (\n              input.weight > 0 && (\n                <div\n                  key={input.id}\n                  className=\"gauge-bar\"\n                  style={{\n                    width: `${input.weight}%`,\n                    backgroundColor: getInputColor(index)\n                  }}\n                />\n              )\n            ))}\n          </div>\n          <div className=\"gauge-scale\">\n            <span>0%</span>\n            <span>50%</span>\n            <span>100%</span>\n          </div>\n          <div className=\"gauge-legend\">\n            {inputs.map((input, index) => (\n              <div key={input.id} className=\"legend-item\">\n                <span \n                  className=\"legend-color\" \n                  style={{ backgroundColor: getInputColor(index) }}\n                />\n                <span className=\"legend-label\">\n                  {input.name || 'Unnamed Input'} ({input.weight}%)\n                </span>\n              </div>\n            ))}\n          </div>\n          {totalWeight > 100 && (\n            <div className=\"weight-warning\">Total weight exceeds 100%</div>\n          )}\n        </div>\n\n        <div className=\"metrics-divider\"></div>\n\n        <div className=\"examples-section\">\n          <h3>Example Companies</h3>\n          <div className=\"companies-container\">\n            {[1, 2].map(num => {\n              const company = generateExampleCompany(num, inputs);\n              return (\n                <div key={num} className=\"company-card\">\n                  <div className=\"company-header\">\n                    <div className=\"company-logo\">\n                      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                        <rect width=\"24\" height=\"24\" fill=\"#e2e8f0\" rx=\"4\"/>\n                        <text x=\"50%\" y=\"50%\" fontSize=\"12\" fill=\"#718096\" \n                              textAnchor=\"middle\" dy=\".3em\">\n                          {num}\n                        </text>\n                      </svg>\n                    </div>\n                    <div className=\"company-name\">{company.name}</div>\n                    <div className=\"health-score\">\n                      Score: {company.healthScore}\n                    </div>\n                  </div>\n                  <div className=\"company-values\">\n                    {company.values.map((value, index) => (\n                      <div key={index} className=\"value-pill\" \n                           title={`${value.category}: ${value.points > 0 ? '+' : ''}${value.points} pts (${value.weight}% weight)`}>\n                        {value.value}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {inputs.map(input => (\n        <div key={input.id} className=\"input-group\">\n          <div className=\"input-header\">\n            <select\n              value={input.name}\n              onChange={(e) => updateInputName(input.id, e.target.value)}\n              className=\"name-input\"\n            >\n              <option value=\"\">Select a Category</option>\n              {Object.entries(CATEGORY_OPTIONS).map(([groupName, options]) => (\n                <optgroup key={groupName} label={groupName}>\n                  {options.map(option => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </optgroup>\n              ))}\n            </select>\n            <div className=\"weight-control\">\n              <button onClick={() => adjustWeight(input.id, false)}>-</button>\n              <span>{input.weight}%</span>\n              <button onClick={() => adjustWeight(input.id, true)}>+</button>\n            </div>\n            {inputs.length > 1 && (\n              <button \n                onClick={() => removeInput(input.id)}\n                className=\"remove-button\"\n              >\n                ×\n              </button>\n            )}\n          </div>\n\n          <div className=\"values-container\">\n            {input.values.map(value => (\n              <div key={value.id} className=\"value-item\">\n                <input\n                  type=\"text\"\n                  value={value.name}\n                  onChange={(e) => updateValueName(input.id, value.id, e.target.value)}\n                  placeholder=\"Score Name\"\n                  className=\"name-input\"\n                />\n                <div className=\"points-control\">\n                  <button onClick={() => adjustPoints(input.id, value.id, false)}>-</button>\n                  <span>{value.points > 0 ? '+' : ''}{value.points} pts</span>\n                  <button onClick={() => adjustPoints(input.id, value.id, true)}>+</button>\n                  {input.values.length > 1 && (\n                    <button \n                      onClick={() => removeValue(input.id, value.id)}\n                      className=\"remove-button\"\n                    >\n                      ×\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <button \n              onClick={() => addValue(input.id)}\n              className=\"add-button\"\n            >\n              Add Value\n            </button>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"footer\">\n        <button onClick={addInput} className=\"add-button\">Add Input</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}