{"ast":null,"code":"var _jsxFileName = \"/Users/alexmartinsmith/Desktop/whomso_hubspot_health_score/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORY_OPTIONS = {\n  \"Customer Engagement (Last 30 days)\": [\"Emails Sent\", \"Meetings Held\", \"Login Activity\", \"Time in Product\", \"Feature Adoption\", \"Survey Responses\"],\n  \"Customer Sentiment\": [\"CSM Sentiment\", \"Customer Feedback\", \"Net Promoter Score (NPS)\"],\n  \"Support Interactions\": [\"Support Tickets Raised\", \"Satisfaction with Support\"],\n  \"Financial Metrics\": [\"Renewal Likelihood\", \"Contract Value Growth\", \"Outstanding Payments\"],\n  \"Account Maturity\": [\"Time as Customer\", \"Lifecycle Stage\", \"Implementation Progress\"],\n  \"Product Fit and Usage\": [\"Seats Utilized vs. Purchased\", \"Expansion Readiness\"],\n  \"Customer Advocacy\": [\"Referrals Given\", \"Case Studies or Testimonials\"],\n  \"Strategic Alignment\": [\"Strategic Goals Alignment\", \"Executive Sponsor Engagement\"],\n  \"Miscellaneous\": [\"Competitor Risk\", \"Social Media Mentions\", \"Training and Certification\"]\n};\nfunction App() {\n  _s();\n  const [inputs, setInputs] = useState([{\n    id: 1,\n    name: '',\n    weight: 20,\n    values: [{\n      id: 1,\n      name: '',\n      points: 0\n    }]\n  }]);\n\n  // Add new input group\n  const addInput = () => {\n    setInputs([...inputs, {\n      id: Date.now(),\n      name: '',\n      weight: 20,\n      values: [{\n        id: Date.now(),\n        name: '',\n        points: 0\n      }]\n    }]);\n  };\n\n  // Add new value to an input\n  const addValue = inputId => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: [...input.values, {\n            id: Date.now(),\n            name: '',\n            points: 0\n          }]\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Update input name\n  const updateInputName = (inputId, name) => {\n    setInputs(inputs.map(input => input.id === inputId ? {\n      ...input,\n      name\n    } : input));\n  };\n\n  // Update value name\n  const updateValueName = (inputId, valueId, name) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => value.id === valueId ? {\n            ...value,\n            name\n          } : value)\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust weight in 5% steps\n  const adjustWeight = (inputId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        const newWeight = Math.max(0, Math.min(100, input.weight + (increment ? 5 : -5)));\n        return {\n          ...input,\n          weight: newWeight\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust points\n  const adjustPoints = (inputId, valueId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => value.id === valueId ? {\n            ...value,\n            points: Math.max(0, value.points + (increment ? 1 : -1))\n          } : value)\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeValue = (inputId, valueId) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        // Only remove if there's more than one value\n        if (input.values.length > 1) {\n          return {\n            ...input,\n            values: input.values.filter(value => value.id !== valueId)\n          };\n        }\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeInput = inputId => {\n    if (inputs.length > 1) {\n      setInputs(inputs.filter(input => input.id !== inputId));\n    }\n  };\n  const totalWeight = inputs.reduce((sum, input) => sum + input.weight, 0);\n\n  // Add this helper function to generate random colors for inputs\n  const getInputColor = index => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEEAD', '#D4A5A5', '#9B59B6', '#3498DB', '#E67E22', '#27AE60'];\n    return colors[index % colors.length];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Health Score Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauge-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weight Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-bars\",\n        children: inputs.map((input, index) => input.weight > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-bar\",\n          style: {\n            width: `${input.weight}%`,\n            backgroundColor: getInputColor(index)\n          }\n        }, input.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-scale\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"50%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-legend\",\n        children: inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: getInputColor(index)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-label\",\n            children: [input.name || 'Unnamed Input', \" (\", input.weight, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, input.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), totalWeight > 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weight-warning\",\n        children: \"Total weight exceeds 100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: input.name,\n          onChange: e => updateInputName(input.id, e.target.value),\n          className: \"name-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), Object.entries(CATEGORY_OPTIONS).map(([groupName, options]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: groupName,\n            children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this))\n          }, groupName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weight-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => adjustWeight(input.id, false),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [input.weight, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => adjustWeight(input.id, true),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeInput(input.id),\n          className: \"remove-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"values-container\",\n        children: [input.values.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"value-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: value.name,\n            onChange: e => updateValueName(input.id, value.id, e.target.value),\n            placeholder: \"Value Name\",\n            className: \"name-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"points-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => adjustPoints(input.id, value.id, false),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value.points\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => adjustPoints(input.id, value.id, true),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), input.values.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeValue(input.id, value.id),\n              className: \"remove-button\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, value.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addValue(input.id),\n          className: \"add-button\",\n          children: \"Add Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, input.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addInput,\n        className: \"add-button\",\n        children: \"Add Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4JUsR8ovNGs0IxBJM2kJ0sP4Ha4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CATEGORY_OPTIONS","App","_s","inputs","setInputs","id","name","weight","values","points","addInput","Date","now","addValue","inputId","map","input","updateInputName","updateValueName","valueId","value","adjustWeight","increment","newWeight","Math","max","min","adjustPoints","removeValue","length","filter","removeInput","totalWeight","reduce","sum","getInputColor","index","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","onChange","e","target","Object","entries","groupName","options","label","option","onClick","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/alexmartinsmith/Desktop/whomso_hubspot_health_score/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CATEGORY_OPTIONS = {\n  \"Customer Engagement (Last 30 days)\": [\n    \"Emails Sent\",\n    \"Meetings Held\",\n    \"Login Activity\",\n    \"Time in Product\",\n    \"Feature Adoption\",\n    \"Survey Responses\"\n  ],\n  \"Customer Sentiment\": [\n    \"CSM Sentiment\",\n    \"Customer Feedback\",\n    \"Net Promoter Score (NPS)\"\n  ],\n  \"Support Interactions\": [\n    \"Support Tickets Raised\",\n    \"Satisfaction with Support\"\n  ],\n  \"Financial Metrics\": [\n    \"Renewal Likelihood\",\n    \"Contract Value Growth\",\n    \"Outstanding Payments\"\n  ],\n  \"Account Maturity\": [\n    \"Time as Customer\",\n    \"Lifecycle Stage\",\n    \"Implementation Progress\"\n  ],\n  \"Product Fit and Usage\": [\n    \"Seats Utilized vs. Purchased\",\n    \"Expansion Readiness\"\n  ],\n  \"Customer Advocacy\": [\n    \"Referrals Given\",\n    \"Case Studies or Testimonials\"\n  ],\n  \"Strategic Alignment\": [\n    \"Strategic Goals Alignment\",\n    \"Executive Sponsor Engagement\"\n  ],\n  \"Miscellaneous\": [\n    \"Competitor Risk\",\n    \"Social Media Mentions\",\n    \"Training and Certification\"\n  ]\n};\n\nfunction App() {\n  const [inputs, setInputs] = useState([\n    {\n      id: 1,\n      name: '',\n      weight: 20,\n      values: [{ id: 1, name: '', points: 0 }]\n    }\n  ]);\n\n  // Add new input group\n  const addInput = () => {\n    setInputs([...inputs, {\n      id: Date.now(),\n      name: '',\n      weight: 20,\n      values: [{ id: Date.now(), name: '', points: 0 }]\n    }]);\n  };\n\n  // Add new value to an input\n  const addValue = (inputId) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: [...input.values, { id: Date.now(), name: '', points: 0 }]\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Update input name\n  const updateInputName = (inputId, name) => {\n    setInputs(inputs.map(input => \n      input.id === inputId ? { ...input, name } : input\n    ));\n  };\n\n  // Update value name\n  const updateValueName = (inputId, valueId, name) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => \n            value.id === valueId ? { ...value, name } : value\n          )\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust weight in 5% steps\n  const adjustWeight = (inputId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        const newWeight = Math.max(0, Math.min(100, input.weight + (increment ? 5 : -5)));\n        return { ...input, weight: newWeight };\n      }\n      return input;\n    }));\n  };\n\n  // Adjust points\n  const adjustPoints = (inputId, valueId, increment) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        return {\n          ...input,\n          values: input.values.map(value => \n            value.id === valueId \n              ? { ...value, points: Math.max(0, value.points + (increment ? 1 : -1)) }\n              : value\n          )\n        };\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeValue = (inputId, valueId) => {\n    setInputs(inputs.map(input => {\n      if (input.id === inputId) {\n        // Only remove if there's more than one value\n        if (input.values.length > 1) {\n          return {\n            ...input,\n            values: input.values.filter(value => value.id !== valueId)\n          };\n        }\n      }\n      return input;\n    }));\n  };\n\n  // Add this new function with the other state management functions\n  const removeInput = (inputId) => {\n    if (inputs.length > 1) {\n      setInputs(inputs.filter(input => input.id !== inputId));\n    }\n  };\n\n  const totalWeight = inputs.reduce((sum, input) => sum + input.weight, 0);\n\n  // Add this helper function to generate random colors for inputs\n  const getInputColor = (index) => {\n    const colors = [\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', \n      '#FFEEAD', '#D4A5A5', '#9B59B6', '#3498DB',\n      '#E67E22', '#27AE60'\n    ];\n    return colors[index % colors.length];\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Health Score Calculator</h1>\n      \n      <div className=\"gauge-container\">\n        <h3>Weight Distribution</h3>\n        <div className=\"gauge-bars\">\n          {inputs.map((input, index) => (\n            input.weight > 0 && (\n              <div\n                key={input.id}\n                className=\"gauge-bar\"\n                style={{\n                  width: `${input.weight}%`,\n                  backgroundColor: getInputColor(index)\n                }}\n              />\n            )\n          ))}\n        </div>\n        <div className=\"gauge-scale\">\n          <span>0%</span>\n          <span>50%</span>\n          <span>100%</span>\n        </div>\n        <div className=\"gauge-legend\">\n          {inputs.map((input, index) => (\n            <div key={input.id} className=\"legend-item\">\n              <span \n                className=\"legend-color\" \n                style={{ backgroundColor: getInputColor(index) }}\n              />\n              <span className=\"legend-label\">\n                {input.name || 'Unnamed Input'} ({input.weight}%)\n              </span>\n            </div>\n          ))}\n        </div>\n        {totalWeight > 100 && (\n          <div className=\"weight-warning\">Total weight exceeds 100%</div>\n        )}\n      </div>\n\n      {inputs.map(input => (\n        <div key={input.id} className=\"input-group\">\n          <div className=\"input-header\">\n            <select\n              value={input.name}\n              onChange={(e) => updateInputName(input.id, e.target.value)}\n              className=\"name-input\"\n            >\n              <option value=\"\">Select a Category</option>\n              {Object.entries(CATEGORY_OPTIONS).map(([groupName, options]) => (\n                <optgroup key={groupName} label={groupName}>\n                  {options.map(option => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </optgroup>\n              ))}\n            </select>\n            <div className=\"weight-control\">\n              <button onClick={() => adjustWeight(input.id, false)}>-</button>\n              <span>{input.weight}%</span>\n              <button onClick={() => adjustWeight(input.id, true)}>+</button>\n            </div>\n            <button \n              onClick={() => removeInput(input.id)}\n              className=\"remove-button\"\n            >\n              ×\n            </button>\n          </div>\n\n          <div className=\"values-container\">\n            {input.values.map(value => (\n              <div key={value.id} className=\"value-item\">\n                <input\n                  type=\"text\"\n                  value={value.name}\n                  onChange={(e) => updateValueName(input.id, value.id, e.target.value)}\n                  placeholder=\"Value Name\"\n                  className=\"name-input\"\n                />\n                <div className=\"points-control\">\n                  <button onClick={() => adjustPoints(input.id, value.id, false)}>-</button>\n                  <span>{value.points}</span>\n                  <button onClick={() => adjustPoints(input.id, value.id, true)}>+</button>\n                  {input.values.length > 1 && (\n                    <button \n                      onClick={() => removeValue(input.id, value.id)}\n                      className=\"remove-button\"\n                    >\n                      ×\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <button \n              onClick={() => addValue(input.id)}\n              className=\"add-button\"\n            >\n              Add Value\n            </button>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"footer\">\n        <button onClick={addInput} className=\"add-button\">Add Input</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}